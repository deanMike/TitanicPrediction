{
    "contents" : "#Mike Dean - Titanic Predictions Using R\n#Sets working directory\nsetwd(\"C:/Users/Mike/Google Drive/School/2014 - 2015/Fall/Prediction/Final Project/R\")\n#Sets the train and test data to the csv files provided from Kaggle.com\ntrain <- read.csv(\"data/train.csv\")\ntest <- read.csv(\"data/test.csv\")\n##Setting up better visualization packages.\ninstall.packages('rattle')\ninstall.packages('rpart.plot')\ninstall.packages('RColorBrewer')\nlibrary(rattle)\nlibrary(rpart.plot)\nlibrary(RColorBrewer)\n##Taking a look at the first name on the list.\ntrain$Name[1]\n##Add a Survived column to the test data.\ntest$Survived <- NA\n##Bind the two datasets together starting with the training set and then the test set.\ncombination <- rbind(train, test)\n##Convert the factorized strings back to regular strings.\ncombination$Name <- as.character(combination$Name)\ncombination$Name[1]\n##Split the string into 3 strings corresponding with last name, salutation, and first + middle names.\nstrsplit(combination$Name[1], split='[,.]')\nstrsplit(combination$Name[1], split='[,.]')[[1]]\n##Isolate the salutation.\nstrsplit(combination$Name[1], split='[,.]')[[1]][2]\n##Apply the salutation isolation to all values in the Name column of the datafram.\ncombination$Title <- sapply(combination$Name, FUN=function(x) {strsplit(x, split = '[,.]')[[1]][2]})\n##Remove the space from the beginning of the title.\ncombination$Title <- sub(' ', '', combination$Title)\ntable(combination$Title)\n##Combining rare titles\n#Combining Mademoiselle and Madame\ncombination$Title[combination$Title %in% c('Mme', 'Mlle')] <- 'Mlle'\n#Combining many male titles into Sir\ncombination$Title[combination$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'\n#Combining many female titles ino Lady\ncombination$Title[combination$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'\n##Revert the strings back to a factor for analysis.\ncombination$Title <- factor(combination$Title)\n##Combining Siblings and Spouses with Parents and Children and add 1 for family size\ncombination$FamilySize <- combination$SibSp + combination$Parch + 1\n#Create a new variable called surname.\ncombination$Surname <- sapply(combination$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})\n#Create a family ID based on Surname and family size (this assumes there are no two families that are the same size with the same last name.)\ncombination$FamilyID <- paste(as.character(combination$FamilySize), combination$Surname, sep = \"\")\n##Any family with 1 or 2 people is considered \"Small\".\ncombination$FamilyID[combination$FamilySize <= 2] <- 'Small'\n##Take a look at the family IDs as a table\ntable(combination$FamilyID)\n##Store this table as a dataframe.\nfamIDs <- data.frame(table(combination$FamilyID))\n##Show the families considered to be \"Small\"\nfamIDs <- famIDs[famIDs$Freq <= 2,]\n##Disassemble the combination dataset back into the train and test sets.\ntrain <- combination[1:891,]\ntest <- combination[892:1309,]\n## Run a new decision tree including the newly engineered variables. ##\nfit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,\n             data=train, method=\"class\")\nPrediction <- predict(fit, test, type = \"class\")\n##Store the correct columns only in the submit variable\nsubmit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)\n##Output a submiittable csv file.\nwrite.csv(submit, file = \"output/FeatureEngineering.csv\", row.names = FALSE)\nfancyRpartPlot(fit)\n\n",
    "created" : 1418268832177.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "80611633",
    "id" : "BBAAF258",
    "lastKnownWriteTime" : 1416880179,
    "path" : "C:/Users/Mike/Google Drive/School/2014 - 2015/Fall/Prediction/Final Project/R/FeatureEngineering.R",
    "project_path" : "FeatureEngineering.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}